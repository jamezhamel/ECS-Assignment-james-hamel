{
  "name": "com.unity.entities",
  "displayName": "Entities",
  "version": "1.0.10",
  "unity": "2022.2",
  "unityRelease": "15f1",
  "dependencies": {
    "com.unity.burst": "1.8.4",
    "com.unity.serialization": "3.1.1",
    "com.unity.collections": "2.1.4",
    "com.unity.mathematics": "1.2.6",
    "com.unity.modules.assetbundle": "1.0.0",
    "com.unity.modules.audio": "1.0.0",
    "com.unity.modules.unitywebrequest": "1.0.0",
    "com.unity.nuget.mono-cecil": "1.11.4",
    "com.unity.scriptablebuildpipeline": "1.20.2",
    "com.unity.profiling.core": "1.0.2"
  },
  "description": "The Entities package provides a modern Entity Component System (ECS) implementation with a basic set of systems and components made for Unity.",
  "keywords": [
    "entities",
    "dots",
    "unity"
  ],
  "_upm": {
    "changelog": "### Added\n\n* Write a WebGLPreloadedStreamingAssets.manifest file into the Library/PlayerDataCache folder for webgl builds containing all files in the streaming asset folder to be preloaded at runtime by the webgl player build program.\n* Added IsReferenceValid property to EntityPrefabReference and EntitySceneReference.\n* Added `EntityManager.AddComponentData<T>(SystemHandle, T)` for managed components.\n\n### Changed\n\n* Significantly optimized bulk-structural change operations in `EntityManager`, including:\n* `EntityManager.AddComponent<T>(EntityQuery)`\n* `EntityManager.AddComponent(EntityQuery, ComponentType)`\n* `EntityManager.AddComponent(EntityQuery, ComponentTypeSet)`\n* `EntityManager.RemoveComponent<T>(EntityQuery)`\n* `EntityManager.RemoveComponent(EntityQuery, ComponentType)`\n* `EntityManager.RemoveComponent<T>(EntityQuery, ComponentTypeSet)`\n* `EntityManager.AddSharedComponent<T>(EntityQuery, T)`\n* `EntityManager.AddSharedComponentManaged<T>(EntityQuery, T)`\n* `EntityManager.DestroyEntity(EntityQuery)` is now up to 4x faster in release builds.\n* Added analyzer to detect several ways an \"Entities.ForEach\" or  \"Job.WithCode\" chain can be malformed.\n\n\n### Removed\n\n* Entities.ForEach and Job.WithCode now generate an error if their lambda contains other lambdas or local functions. This never fully worked or was fully implemented.  Instead, try using APIs, like SystemAPI.Query, IJobEntity and IJobChunk. These all work with both local functions and lambdas.\n\n### Fixed\n\n* SystemAPI methods now work inside of partial methods.\n* All aspect generated type references to their full name beginning with `global::` (Type Shadowing)\n* Do not generate aspect from type with shadowed IAspect type\n* Fixed sourcegen issues with user types and namespaces that conflict with Unity and Entities types.\n* Identically named types in different namespaces no longer trigger `CS0128` and `CS1503` when used as parameters in `IJobEntity.Execute()`.\n* If you update multiple packages, create a new section with a new header for the other package.\n* Assets loaded in edit mode through the content system are not forcibly unloaded.\n* LocalToWorld.Transform now works with nonuniform scale\n* Introduce clear error message (`SGJE0023`) when parameter types in `IJobEntity.Execute()` methods are less accessible than the `IJobEntity` types in which they are used.\n* `EntityCommandBuffer.AddComponent<T>(Entity)` for managed `T` no longer leaves the managed component store in an invalid state.\n* The constructor for `ComponentTypeSet` no longer throws an exception if the provided list of component types is empty.\n* `EntityManager.AddSharedComponent<T>(EntityQuery,T)` and `EntityManager.AddSharedComponentManaged<T>(EntityQuery,T)`now set the shared component `T` to the provided value, even if the target chunk already has component `T`. This changes makes this method consistent with other \"add component and set to value\" operations. *All existing call sites should be reviewed to ensure that they're not relying on the function's previous behavior!*\n* `EntityManager.DestroyEntity(EntityQuery)` had an undocumented constraint: if any of the target entities have a `LinkedEntityGroup` buffer component, the entities in that buffer must also match the target query. This constraint is now documented, and consistently applied in all code paths of this function.\n* You now can register generic ISystems so that they can be discovered and created automatically with world creation, or created manually via CreateSystem. Register each generic instance of them with `[assembly: RegisterGenericSystemType(typeof(YourGenericSystem<YourParticularType>))]` to allow such usage.\n\n### Known Issues\n\n* Some errors are surfaced when importing the Entities package into a 2D project. To bypass this issue, restart the editor once the package has been imported."
  },
  "upmCi": {
    "footprint": "6c8bac11572de25c8e3d1505efe1e54a34188459"
  },
  "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.entities@1.0/manual/index.html",
  "repository": {
    "url": "https://github.cds.internal.unity3d.com/unity/dots.git",
    "type": "git",
    "revision": "464acdc5351df3c5deeb425d7aa31f4c7b20c0cf"
  }
}
